{"version":3,"file":"static/js/319.7894e972.chunk.js","mappings":"0vBAIaA,EAAYC,EAAAA,GAAAA,IAAH,6WAGXC,EAAAA,EAAAA,QAKAA,EAAAA,EAAAA,QAUEC,EAAQF,EAAAA,GAAAA,GAAH,4OAWLG,GAAUH,EAAAA,EAAAA,IAAOI,EAAAA,EAAPJ,CAAH,+CAGPK,EAAOL,EAAAA,GAAAA,KAAH,6FAKJM,EAAQN,EAAAA,GAAAA,MAAH,+GAOLO,EAAQP,EAAAA,GAAAA,MAAH,iVAaPC,EAAAA,EAAAA,SAIEO,EAAYR,EAAAA,GAAAA,EAAH,yLASTS,GAAMT,EAAAA,EAAAA,IAAOI,EAAAA,EAAPJ,CAAH,+CAGHU,EAASV,EAAAA,GAAAA,OAAH,glBAuBRC,EAAAA,EAAAA,SAIEU,GAAaX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,+mBAwBZC,EAAAA,EAAAA,SAKEY,EAAMb,EAAAA,GAAAA,IAAH,gGAEL,SAAAc,GAAK,OAAIA,EAAMC,KAAV,IACJ,SAAAD,GAAK,OAAIA,EAAME,MAAQ,oBAAsB,gBAAxC,I,oBCnHVC,EAAqBC,EAAAA,KAAaC,MAAM,CAC3CC,MAAOF,EAAAA,KAAaE,QAAQC,SAAS,eACrCC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,sCACPC,IAAI,GAAI,wCACRH,SAAS,kBACZI,SAAUP,EAAAA,KACPK,IAAI,EAAG,cACPC,IAAI,GAAI,aACRH,SAAS,cACZK,QAASR,EAAAA,KACNG,SAAS,kBACTM,MACC,CAACT,EAAAA,GAAQ,YAAa,MACtB,+CAIKU,EAAmB,WAC9B,OAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACEC,cAAe,CAAEd,MAAO,GAAIE,SAAU,GAAII,QAAS,GAAID,SAAU,IACjEU,iBAAkBlB,EAClBmB,SATiB,SAAC,EAAD,GAAmD,IAAhDhB,EAA+C,EAA/CA,MAAOE,EAAwC,EAAxCA,SAAUG,EAA8B,EAA9BA,SAA8B,EAAhBY,UACrDL,GAASM,EAAAA,EAAAA,IAAa,CAAElB,MAAAA,EAAOE,SAAAA,EAAUG,SAAAA,IAE1C,EAGC,SAKG,gBAAGc,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,OAAQC,EAAvC,EAAuCA,OAAQC,EAA/C,EAA+CA,QAA/C,OACC,UAAC5C,EAAD,YACE,UAACG,EAAD,YACE,SAACC,EAAD,CACEyC,IAAKC,EAAAA,GACLC,UAAU,YACV/B,MAAO,GACPgC,OAAQ,GACRC,MAAM,SACL,IAPL,YASS,KACT,UAAC3C,EAAD,CAAM+B,SAAUG,EAAhB,UACG,KACD,UAACjC,EAAD,YACE,SAACG,EAAD,CAAKmC,IAAKxB,EAAAA,GAAOL,MAAO,GAAIgC,OAAQ,GAAIC,MAAM,WAC9C,SAACzC,EAAD,CACE0C,KAAK,QACLC,KAAK,QACLC,MAAOV,EAAOrB,MACdgC,SAAUZ,EACVa,YAAY,WACX,IACFX,EAAOtB,OAASuB,EAAQvB,OACvB,SAACZ,EAAD,UAAYkC,EAAOtB,QACjB,SAEN,UAACd,EAAD,YACE,SAACG,EAAD,CAAKmC,IAAKU,EAAAA,GAAMvC,MAAO,GAAIgC,OAAQ,GAAIC,MAAM,UAC7C,SAACzC,EAAD,CACE0C,KAAMnB,EAAgB,OAAS,WAC/BoB,KAAK,WACLC,MAAOV,EAAOnB,SACd8B,SAAUZ,EACVa,YAAY,cAEd,SAAC5C,EAAD,CACEmC,IAAKd,EAAgByB,EAAAA,GAAMC,EAAAA,GAC3BzC,MAAO,GACPgC,OAAQ,GACRC,MAAM,MACNS,QAAS,kBAAM1B,GAAkBD,EAAxB,KAEX,SAAC,IAAD,CACER,SAAUmB,EAAOnB,SACjBoC,UAAW,CAAC,UAAW,MAAO,SAAU,UAAW,WACnDC,UAAW,EACXC,UAAW,KAEZlB,EAAOpB,UAAYqB,EAAQrB,UAC1B,SAACd,EAAD,UAAYkC,EAAOpB,WACjB,SAEN,UAAChB,EAAD,YACE,SAACG,EAAD,CAAKmC,IAAKU,EAAAA,GAAMvC,MAAO,GAAIgC,OAAQ,GAAIC,MAAM,UAC7C,SAACzC,EAAD,CACE0C,KAAMnB,EAAgB,OAAS,WAC/BoB,KAAK,UACLC,MAAOV,EAAOf,QACd0B,SAAUZ,EACVa,YAAY,sBAEd,SAAC5C,EAAD,CACEmC,IAAKd,EAAgByB,EAAAA,GAAMC,EAAAA,GAC3BzC,MAAO,GACPgC,OAAQ,GACRC,MAAM,MACNS,QAAS,kBAAM1B,GAAkBD,EAAxB,IAEG,IAA3BW,EAAOnB,SAASuC,SACD,SAAChD,EAAD,CACEE,MACE0B,EAAOf,QAAQmC,OAASpB,EAAOnB,SAASuC,OAAS,EAC7C,IACCpB,EAAOf,QAAQmC,OAASpB,EAAOnB,SAASuC,OAAU,IAEzD7C,MACEyB,EAAOnB,SAASwC,MAAM,EAAGrB,EAAOf,QAAQmC,UACxCpB,EAAOf,UAaZgB,EAAOhB,SAAWiB,EAAQjB,SACzB,SAAClB,EAAD,UAAYkC,EAAOhB,UACjB,SAEN,UAACpB,EAAD,YACE,SAACG,EAAD,CAAKmC,IAAKmB,EAAAA,GAAShD,MAAO,GAAIgC,OAAQ,GAAIC,MAAM,aAChD,SAACzC,EAAD,CACE0C,KAAK,OACLC,KAAK,WACLC,MAAOV,EAAOhB,SACd2B,SAAUZ,EACVa,YAAY,gBAEbX,EAAOjB,UAAYkB,EAAQlB,UAC1B,SAACjB,EAAD,UAAYkC,EAAOjB,WACjB,SAEN,SAACf,EAAD,CAAQuC,KAAK,SAAb,uBACA,SAACtC,EAAD,CAAYqD,GAAG,SAAf,yBA7GL,GAmHN,ECrKYC,EAAMjE,EAAAA,GAAAA,QAAH,gKAELC,EAAAA,EAAAA,OAGAA,EAAAA,EAAAA,SAMEF,EAAYC,EAAAA,GAAAA,IAAH,+OAKXC,EAAAA,EAAAA,SAQEiE,EAASlE,EAAAA,GAAAA,IAAH,6OAIRC,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,SAKEC,EAAQF,EAAAA,GAAAA,GAAH,oWACPC,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,S,8BCDX,EA/BqB,WACnB,OACE,UAACgE,EAAD,gBAAM,UAACC,EAAD,WACD,KACD,UAACC,EAAA,EAAD,YACE,gBACEvB,IAAKwB,EAAAA,GACLC,IAAI,UACJtD,MAAM,MACNgC,OAAO,MACPuB,OAAM,WAAMF,EAAAA,GAAN,gBAAsBG,EAAAA,GAAtB,gBAAwCC,EAAAA,GAAxC,UAER,SAAC,EAAD,8BAEF,UAACC,EAAA,EAAD,YACE,gBACE7B,IAAK8B,EAAAA,GACLL,IAAI,UACJtD,MAAM,MACNgC,OAAO,MACPuB,OAAM,UAAKI,EAAAA,GAAL,gBAAsBC,EAAAA,GAAtB,gBAAyCC,EAAAA,GAAzC,UAER,SAAC,EAAD,iCAGN,SAAC,EAAD,WACE,SAAChD,EAAD,QAGL,C","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/Registration.styled.js","pages/Registration.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport SVG from 'react-inlinesvg';\nimport { device } from 'stylesheet/breakpoints';\nexport const Container = styled.div`\n  background-color: var(--white);\n  padding: 107px 20px;\n  @media ${device.tabDesk} {\n    width: 533px;\n    border-radius: 20px;\n    padding: 40px 59px 62px 65px;\n  }\n  @media ${device.mobile} {\n    width: 100vw;\n    padding: 0;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n`;\nexport const Title = styled.h2`\n  color: var(--black);\n  font-family: 'Poppins Bold';\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 1.5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 60px;\n`;\nexport const LogoSvg = styled(SVG)`\n  margin-right: 20px;\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Label = styled.label`\n  margin-top: 32px;\n  position:relative;\n  &:first-child {\n    margin-top: 0;\n  }\n`;\nexport const Input = styled.input`\n  width: 280px;\n  border: none;\n  outline: 0;\n  border-bottom: 1px solid var(--gray-5);\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--gray-4);\n  padding-left: 45px;\n  padding-bottom: 8px;\n  @media ${device.tabDesk} {\n    width: 410px;\n  }\n`;\nexport const TextError = styled.p`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--btn-bg-color);\n  margin-top: 5px;\n`;\nexport const Svg = styled(SVG)`\n  position: absolute;\n`;\nexport const Button = styled.button`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  text-align: center;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\ncursor: pointer;\n  color: var(--white);\n  width: 280px;\n  height: 50px;\n  margin-bottom: 20px;\n  margin-top: 40px;\n  background-color: var(--btn-bg-color);\n  border: none;\n  border-radius: 20px;\n    &:hover {\n    background-color: var(--white);\n    color: var(--btn-bg-color);\n    transition: 1000ms;\n    border: 1px solid var(--btn-bg-color);\n  }\n  @media ${device.tabDesk} {\n    width: 300px;\n  }\n`;\nexport const StyledLink = styled(Link)`\n  font-family: 'Circe';\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.5;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: var(--active-bg-color);\n  width: 280px;\n  height: 50px;\n  background-color: var(--white);\n  border: 1px solid #4a56e2;\n  border: 1px solid var(--active-bg-color);\n  border-radius: 20px;\n   &:hover {\n    background-color: var(--active-bg-color);\n    color: var(--white);\n    transition: 1000ms;\n  }\n  @media ${device.tabDesk} {\n    width: 300px;\n  }\n`;\n//selutin\nexport const Bar = styled.div`\nmargin-top:5px;\n  width: ${props => props.width}%;\n  border: ${props => props.color ? ' 4px solid#24cca7' : '4px solid #f00'};\n  border-radius: 4px;\n`;","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport { registration } from '../../redux/auth/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport PasswordStrengthBar from 'react-password-strength-bar';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  Input,\n  Label,\n  Container,\n  Title,\n  Svg,\n  Button,\n  StyledLink,\n  LogoSvg,\n  TextError,\n  Bar,\n} from './RegistrationForm.styled.js';\nimport { logo, email, lock, account, eyeClose, eye } from 'assets/media/icons';\n\n const RegistrationSchema = Yup.object().shape({\n    email: Yup.string().email().required('Enter email'),\n    password: Yup.string()\n      .min(6, 'Password is too short, at least 6!')\n      .max(12, 'Password is too long, at maximum 12!')\n      .required('Enter password'),\n    username: Yup.string()\n      .min(1, 'Too Short!')\n      .max(12, 'Too Long!')\n      .required('Enter name'),\n    confirm: Yup.string()\n      .required('Enter password')\n      .oneOf(\n        [Yup.ref('password'), null],\n        'Your passwords are different, try harder!'\n      ),\n  });\n\nexport const RegistrationForm = () => {\n  const [passwordShown, setPasswordShown] = useState(false);\n  const dispatch = useDispatch();\n  const handelSubmit = ({ email, password, username }, { resetForm }) => {\n    dispatch(registration({ email, password, username }));\n    //resetForm();\n  };\n \n  return (\n    <Formik\n      initialValues={{ email: '', password: '', confirm: '', username: '' }}\n      validationSchema={RegistrationSchema}\n      onSubmit={handelSubmit}\n    >\n      {({ handleSubmit, handleChange, values, errors, touched }) => (\n        <Container>\n          <Title>\n            <LogoSvg\n              src={logo}\n              className=\"logo-icon\"\n              width={30}\n              height={30}\n              title=\"Logo\"\n            />{' '}\n            Wallet\n          </Title>{' '}\n          <Form onSubmit={handleSubmit}>\n            {' '}\n            <Label>\n              <Svg src={email} width={30} height={28} title=\"Email\" />\n              <Input\n                type=\"email\"\n                name=\"email\"\n                value={values.email}\n                onChange={handleChange}\n                placeholder=\"E-mail\"\n              />{' '}\n              {errors.email && touched.email ? (\n                <TextError>{errors.email}</TextError>\n              ) : null}\n            </Label>\n            <Label>\n              <Svg src={lock} width={30} height={28} title=\"Lock\" />\n              <Input\n                type={passwordShown ? 'text' : 'password'}\n                name=\"password\"\n                value={values.password}\n                onChange={handleChange}\n                placeholder=\"Password\"\n              />\n              <Svg\n                src={passwordShown ? eye : eyeClose}\n                width={30}\n                height={28}\n                title=\"Eye\"\n                onClick={() => setPasswordShown(!passwordShown)}\n              />\n              <PasswordStrengthBar\n                password={values.password}\n                barColors={['#e0e0e0', 'red', 'orange', '#4a56e2', '#24cca7']}\n                minLength={6}\n                maxLength={12}\n              />\n              {errors.password && touched.password ? (\n                <TextError>{errors.password}</TextError>\n              ) : null}\n            </Label>\n            <Label>\n              <Svg src={lock} width={30} height={28} title=\"Lock\" />\n              <Input\n                type={passwordShown ? 'text' : 'password'}\n                name=\"confirm\"\n                value={values.confirm}\n                onChange={handleChange}\n                placeholder=\"Confirm password\"\n              />\n              <Svg\n                src={passwordShown ? eye : eyeClose}\n                width={30}\n                height={28}\n                title=\"Eye\"\n                onClick={() => setPasswordShown(!passwordShown)}\n              />\n{values.password.length !== 0 && (\n                <Bar\n                  width={\n                    values.confirm.length / values.password.length > 1\n                      ? 100\n                      : (values.confirm.length / values.password.length) * 100\n                  }\n                  color={\n                    values.password.slice(0, values.confirm.length) ===\n                    values.confirm\n                  }\n                ></Bar>\n              )}\n              {/*<PasswordStrengthBar\n                password={values.confirm}\n                barColors={['#e0e0e0', 'red', 'orange', '#4a56e2', '#24cca7']}\n                shortScoreWord={''}\n                scoreWords={[]}\n                minLength={6}\n                maxLength={12}\n                />*/}\n\n              {errors.confirm && touched.confirm ? (\n                <TextError>{errors.confirm}</TextError>\n              ) : null}\n            </Label>\n            <Label>\n              <Svg src={account} width={30} height={28} title=\"Account\" />\n              <Input\n                type=\"text\"\n                name=\"username\"\n                value={values.username}\n                onChange={handleChange}\n                placeholder=\"First name \"\n              />\n              {errors.username && touched.username ? (\n                <TextError>{errors.username}</TextError>\n              ) : null}\n            </Label>\n            <Button type=\"submit\">Register</Button>\n            <StyledLink to=\"/login\">Log In</StyledLink>\n          </Form>\n        </Container>\n      )}\n    </Formik>\n  );\n};\n// <Test validate={validForm(\"cataaa\")} status={valid}></Test>\n","import styled from 'styled-components';\nimport { device } from 'stylesheet/breakpoints';\n\nexport const Box = styled.section`\n    height: 100vh;\n  @media ${device.tablet} {\n    padding: 60px 0 48px 0;\n  }\n  @media ${device.desktop} {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media ${device.desktop} {\n    width: 100%;\n    height: 100vh;\n      background-color: rgba(255, 255, 255, 0.4);\n    backdrop-filter: blur(25px);\n  }\n`;\n\nexport const ImgBox = styled.div`\n  display: flex;\n   align-items: center;\n    justify-content: center;\n  @media ${device.tablet} {\n    flex-direction: row;\n    margin-bottom: 50px;\n  }\n  @media ${device.desktop} {\n    flex-direction: column;\n    width: 100%;\n  }\n`;\nexport const Title = styled.h2`\n  @media ${device.tablet} {\n    flex-direction: row;\n    margin-left: 40px;\n  }\n  @media ${device.desktop} {\n    margin-top: 28px;\n  }\n\n  font-family: 'Poppins Regular';\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n  color: var(--black);\n`;\n\n","import { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nimport { Container, ImgBox, Title, Box } from './Registration.styled';\nimport {\n  frameDesk,\n  frameDesk2x,\n  frameDesk3x,\n  frameTab,\n  frameTab2x,\n  frameTab3x,\n} from '../assets/media/images/index.js';\nimport { Tablet } from 'components/Container/Tablet';\nimport { Desktop } from 'components/Container/Desktop';\n\nconst Registration = () => {\n  return (\n    <Box> <ImgBox>\n        {' '}\n        <Tablet>\n          <img\n            src={frameTab}\n            alt=\"Finance\"\n            width=\"274\"\n            height=\"250\"\n            srcSet={` ${frameTab} 1x, ${frameTab2x} 2x, ${frameTab3x} 3x`}\n          />\n          <Title>Finance App</Title>\n        </Tablet>\n        <Desktop>\n          <img\n            src={frameDesk}\n            alt=\"Finance\"\n            width=\"452\"\n            height=\"412\"\n            srcSet={`${frameDesk} 1x, ${frameDesk2x} 2x, ${frameDesk3x} 3x`}\n          />\n          <Title>Finance App</Title>\n        </Desktop>\n      </ImgBox>\n    <Container>\n      <RegistrationForm />\n    </Container></Box>\n  )\n};\n\nexport default Registration;\n"],"names":["Container","styled","device","Title","LogoSvg","SVG","Form","Label","Input","TextError","Svg","Button","StyledLink","Link","Bar","props","width","color","RegistrationSchema","Yup","shape","email","required","password","min","max","username","confirm","oneOf","RegistrationForm","useState","passwordShown","setPasswordShown","dispatch","useDispatch","initialValues","validationSchema","onSubmit","resetForm","registration","handleSubmit","handleChange","values","errors","touched","src","logo","className","height","title","type","name","value","onChange","placeholder","lock","eye","eyeClose","onClick","barColors","minLength","maxLength","length","slice","account","to","Box","ImgBox","Tablet","frameTab","alt","srcSet","frameTab2x","frameTab3x","Desktop","frameDesk","frameDesk2x","frameDesk3x"],"sourceRoot":""}