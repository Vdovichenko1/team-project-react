{"version":3,"file":"static/js/367.5a1b23ac.chunk.js","mappings":"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","sources":["components/DiagramTab/DiagramTab.styled.js","components/DiagramTabMoreInfor/DiagramTabMoreInfor.styled.js","components/DiagramTabMoreInfor/DiagramTabMoreInfor.js","components/DiagramTab/DiagramTab.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { VscChevronDown } from 'react-icons/vsc';\n\nexport const Box = styled.div`\n  @media screen and (min-width: 1279.99px) {\n    padding-left: 69px;\n  }\n`;\n\nexport const Statistic = styled.div`\n  display: flex;\n  align-items: flex-start;\n  @media screen and (max-width: 768.99px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nexport const Diagram = styled.div`\n  position: relative;\n  margin-left: 16px;\n\n  @media screen and (min-width: 768.99px) {\n    width: 236px;\n    margin-right: 116px;\n  }\n  @media screen and (min-width: 1279.99px) {\n    width: 288px;\n    margin-left: 0;\n    margin-right: 32px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  font-weight: 400;\n  margin-bottom: 8px;\n  @media screen and (min-width: 768.99px) {\n    margin-bottom: 20px;\n  }\n`;\nexport const Balance = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, 50%);\n  font-size: 18px;\n  font-weight: 700;\n\n  @media screen and (min-width: 768.99px) {\n    top: 50%;\n    transform: translate(-50%, 0);\n  }\n  @media screen and (min-width: 1279.99px) {\n    top: 50%;\n    transform: translate(-50%, 0);\n  }\n`;\nexport const Table = styled.div`\n  margin-top: 25px;\n`;\n\nexport const StyledForm = styled.form`\n  width: 280px;\n  height: 120px;\n  position: relative;\n  @media screen and (min-width: 768.99px) {\n    display: flex;\n    gap: 16px;\n    width: 336px;\n    height: 50px;\n  }\n  @media screen and (min-width: 1279.99px) {\n    gap: 32px;\n    width: 396px;\n  }\n`;\n\nexport const WrapperYear = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: #fff;\n  border-radius: 30px;\n  width: 280px;\n  height: 50px;\n  @media screen and (min-width: 768.99px) {\n    width: 160px;\n  }\n  @media screen and (min-width: 1279.99px) {\n    width: 182px;\n  }\n`;\n\nexport const WrapperMmonth = styled.label`\n  position: absolute;\n  top: 70px;\n  left: 0;\n  background-color: #fff;\n  border-radius: 30px;\n  width: 280px;\n  height: 50px;\n  @media screen and (min-width: 768.99px) {\n    width: 160px;\n    top: 0;\n    left: 176px;\n  }\n  @media screen and (min-width: 1279.99px) {\n    width: 182px;\n    top: 0;\n    left: 214px;\n  }\n`;\n\nexport const StyledSelect = styled.select`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 1;\n  appearance: none;\n  background-color: transparent;\n  height: 50px;\n  width: 100%;\n  border-radius: 30px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 768.99px) {\n    width: 160px;\n    margin-top: 0;\n  }\n  @media screen and (min-width: 1279.99px) {\n    width: 182px;\n    top: 0;\n  }\n`;\nexport const StyledVscChevronDown = styled(VscChevronDown)`\n  width: 24px;\n  height: 18px;\n  position: absolute;\n  top: 50%;\n  right: 0;\n  transform: translate(-20px, -50%);\n  ${StyledSelect}:focus + & {\n    transform: translate(-20px, -50%) rotate(180deg);\n  }\n  z-index: 0;\n`;\n\nexport const TableHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 58px;\n  background-color: #fff;\n  border-radius: 30px;\n  margin-top: 20px;\n`;\nexport const HeaderText = styled.div`\n  font-weight: 700;\n  font-size: 18px;\n  padding-left: 15px;\n  padding-right: 15px;\n  line-height: 58px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: rgb(36, 204, 167);\n  }\n  @media screen and (min-width: 768.99px) {\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n  @media screen and (min-width: 1279.99px) {\n    padding-left: 28px;\n    padding-right: 28px;\n  }\n`;\nexport const Data = styled.ul`\n  scrollbar-width: thin;\n  min-height: 100px;\n  @media screen and (min-width: 768.99px) {\n    max-height: calc(100vh - 590px);\n    overflow-y: auto;\n  }\n  @media screen and (min-width: 1279.99px) {\n    max-height: calc(100vh - 360px);\n    overflow-y: auto;\n  }\n`;\n\nexport const Category = styled.li`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  line-height: 52px;\n  padding-left: 15px;\n  padding-right: 15px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n  text-align: left;\n  cursor: pointer;\n  div {\n    margin-left: 5px;\n  }\n  div + div {\n    margin-left: auto;\n  }\n\n  &::before {\n    content: '';\n    display: block;\n    width: 24px;\n    height: 24px;\n    border-radius: 2px;\n    background-color: ${props => props.col};\n  }\n`;\nexport const Total = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 16px;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  position: fixed;\n  z-index: 2;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\nexport const Report = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  z-index: 10;\n  transform: translate(-50%, -50%);\n  background-color: #ddd;\n  width: 280px;\n  @media screen and (min-width: 767.99px) {\n    width: 360px;\n  }\n`;\nexport const Caption = styled.div`\n  color: #333;\n  font-size: 14px;\n  font-weight: 700;\n  width: 240px;\n  padding: 8px;\n`;\nexport const Table = styled.div``;\n\nexport const Header = styled.div`\n  display: none;\n  background-color: #fff;\n  @media screen and (min-width: 767.99px) {\n    display: flex;\n  }\n`;\n\nexport const StyledTh = styled.span`\n  display: inline-block;\n  padding: 8px;\n  font-weight: 500;\n  background-color: #fff;\n  text-align: ${props => props.position};\n  &:nth-child(2) {\n    margin-left: 12px;\n  }\n  &:nth-child(3) {\n    margin-left: auto;\n  }\n`;\n\nexport const StyledTr = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid #222;\n\n  @media screen and (min-width: 767.99px) {\n    flex-direction: row;\n    border: none;\n    width: 100%;\n  }\n`;\n\nexport const SpanCell = styled.span`\n  display: flex;\n  justify-content: space-between;\n  padding: 8px;\n  font-size: 12px;\n  border-bottom: 1px solid #dcdcdf;\n  box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n\n  @media screen and (min-width: 767.99px) {\n    display: inline-block;\n    text-align: ${props => props.position};\n    &:last-child {\n      margin-left: auto;\n    }\n  }\n`;\nexport const SpanCaption = styled.span`\n  text-align: left;\n  @media screen and (min-width: 767.99px) {\n    display: none;\n  }\n`;\nexport const SpanValue = styled.span`\n  text-align: right;\n`;\nexport const SpanSum = styled.span`\n  text-align: right;\n  color: #ff6596;\n`;\nexport const Btn = styled.span`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  width: 24px;\n  height: 24px;\n  text-align: center;\n  font-weight: 700;\n  color: #fff;\n  background-color: rgba(0, 0, 0, 0.6);\n  border: none;\n  border-radius: 50%;\n`;\n","import moment from 'moment';\nimport { createPortal } from 'react-dom';\nimport {\n  Table,\n  Header,\n  Btn,\n  StyledTh,\n  StyledTr,\n  SpanValue,\n  SpanSum,\n  SpanCell,\n  Box,\n  Report,\n  Caption,\n  SpanCaption,\n} from './DiagramTabMoreInfor.styled';\n\nexport function DiagramTabMoreInfor({ showinfo, setShowinfo }) {\n  // console.log('showinfo ======', showinfo);\n\n  return createPortal(\n    <Box>\n      <Report>\n        <Caption> {showinfo.caption}</Caption>\n        <Table>\n          <Header>\n            <StyledTh position={'left'}>Date</StyledTh>\n            <StyledTh position={'left'}>Comment</StyledTh>\n            <StyledTh>Sum</StyledTh>\n          </Header>\n          <div style={{ maxHeight: '60vh', overflow: 'auto' }}>\n            {showinfo.data.map(item => (\n              <StyledTr key={item.id}>\n                <SpanCell position={'left'}>\n                  <SpanCaption>Date</SpanCaption>\n                  <SpanValue>\n                    {moment(item.transactionDate).format('DD.MM.YY')}\n                  </SpanValue>\n                </SpanCell>\n                <SpanCell position={'left'}>\n                  <SpanCaption>Comment</SpanCaption>\n                  <SpanValue>{item.comment}</SpanValue>\n                </SpanCell>\n                <SpanCell position={'right'}>\n                  <SpanCaption>Sum</SpanCaption>\n                  <SpanSum>{-item.amount}</SpanSum>\n                </SpanCell>\n              </StyledTr>\n            ))}\n          </div>\n        </Table>\n        <Btn\n          onClick={() =>\n            setShowinfo({ showinfo: false, caption: '', data: [] })\n          }\n          type=\"button\"\n        >\n          x\n        </Btn>\n      </Report>\n    </Box>,\n    document.querySelector('#portal')\n  );\n}\n","import { useEffect } from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport {\n  Box,\n  Category,\n  HeaderText,\n  Statistic,\n  StyledForm,\n  StyledSelect,\n  TableHeader,\n  Total,\n  Balance,\n  StyledVscChevronDown,\n  WrapperYear,\n  WrapperMmonth,\n  Title,\n  Table,\n  Diagram,\n  Data,\n} from './DiagramTab.styled';\nimport { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { useRef } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { DiagramTabMoreInfor } from 'components/DiagramTabMoreInfor/DiagramTabMoreInfor';\nimport { Loader } from 'components/Loader/Loader';\nimport { Mobile } from 'components/Container/Mobile';\nimport { IsDesktopOrTablet } from 'components/Container/Tablet';\n\nChartJS.register(ArcElement, Tooltip);\n\nconst colors = [\n  '#fed057',\n  '#FFD8D0',\n  '#FF6596',\n  '#C5BAFF',\n  '#6E78E8',\n  '#81E1FF',\n  '#00AD84',\n  '#4A56E2',\n  '#FD9498',\n  '#A6A6A6',\n];\n\nconst DiagramTab = () => {\n  const [summary, setSummary] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const [showinfo, setShowinfo] = useState({\n    showinfo: false,\n    caption: '',\n    data: [],\n  });\n  const yearNode = useRef();\n  const monthNode = useRef();\n  const transactions = useSelector(state => state.finance.transactions);\n  const years = new Set(transactions.map(el => el.transactionDate.slice(0, 4)));\n  const monthes = new Set(\n    transactions.map(el => el.transactionDate.slice(5, 7))\n  );\n\n  const length = summary?.categoriesSummary.filter(el => el.total < 0).length;\n\n  const data = {\n    labels: summary?.categoriesSummary\n      .filter(el => el.total < 0)\n      .map(({ name }) => name),\n    datasets: [\n      {\n        label: 'expense',\n        data: summary?.categoriesSummary\n          .filter(el => el.total < 0)\n          .map(({ total }) => -total),\n        backgroundColor: colors.slice(0, length),\n        borderColor: colors.slice(0, length),\n        borderWidth: 1,\n      },\n    ],\n  };\n  useEffect(() => {\n    async function getDataForState() {\n      try {\n        const summary = await axios.get('/api/transactions-summary');\n        const categories = await axios.get('/api/transaction-categories');\n        return { summary: summary.data, categories: categories.data };\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getDataForState().then(({ summary, categories }) => {\n      setSummary(summary);\n      setCategories(categories);\n    });\n  }, []);\n\n  //  i.categoryId = categories.find(el => el.name === i.name).id;\n\n  //DiagramTab.forceUpdate();\n\n  async function handler(e) {\n    e.preventDefault();\n    if (yearNode.current.value === '' && monthNode.current.value !== '') {\n      return;\n    }\n    if (yearNode.current.value === '' && monthNode.current.value === '') {\n      try {\n        const res = await axios.get(`/api/transactions-summary`);\n        setSummary(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    if (yearNode.current.value !== '' && monthNode.current.value === '') {\n      try {\n        const res = await axios.get(\n          `/api/transactions-summary?year=${yearNode.current.value}`\n        );\n        setSummary(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (yearNode.current.value !== '' && monthNode.current.value !== '') {\n      try {\n        const res = await axios.get(\n          `/api/transactions-summary?month=${monthNode.current.value}&year=${yearNode.current.value}`\n        );\n        setSummary(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n  function categorySort(e) {\n    const node = e.currentTarget;\n\n    if (node.dataset.sort === '=' || node.dataset.sort === 'd') {\n      node.dataset.sort = 'i';\n      setSummary(state => ({\n        ...state,\n        categoriesSummary: [\n          ...state.categoriesSummary.sort((a, b) => (a.name > b.name ? 1 : -1)),\n        ],\n      }));\n    } else if (node.dataset.sort === 'i') {\n      node.dataset.sort = 'd';\n      setSummary(state => ({\n        ...state,\n        categoriesSummary: [\n          ...state.categoriesSummary.sort((a, b) => (a.name < b.name ? 1 : -1)),\n        ],\n      }));\n    }\n  }\n  function sumSort(e) {\n    const node = e.currentTarget;\n\n    if (node.dataset.sort === '=' || node.dataset.sort === 'd') {\n      node.dataset.sort = 'i';\n      setSummary(state => ({\n        ...state,\n        categoriesSummary: [\n          ...state.categoriesSummary.sort((a, b) =>\n            -a.total > -b.total ? 1 : -1\n          ),\n        ],\n      }));\n    } else if (node.dataset.sort === 'i') {\n      node.dataset.sort = 'd';\n      setSummary(state => ({\n        ...state,\n        categoriesSummary: [\n          ...state.categoriesSummary.sort((a, b) =>\n            -a.total < -b.total ? 1 : -1\n          ),\n        ],\n      }));\n    }\n  }\n  function getMoreInfo(e) {\n    const categoryName = e.currentTarget.dataset.name;\n    const categoryId = categories.find(el => el.name === categoryName).id;\n    let transactionByExpenses = transactions.filter(\n      el => el.categoryId === categoryId\n    );\n    let caption = 'Exspenses by category ' + categoryName;\n\n    if (yearNode.current.value !== '') {\n      transactionByExpenses = transactionByExpenses.filter(\n        el => el.transactionDate.slice(0, 4) === yearNode.current.value\n      );\n      caption = caption + ' for a period: year ' + yearNode.current.value;\n    }\n    if (yearNode.current.value !== '' && monthNode.current.value !== '') {\n      transactionByExpenses = transactionByExpenses.filter(\n        el => el.transactionDate.slice(5, 7) === monthNode.current.value\n      );\n      caption = caption + ' month ' + monthNode.current.value;\n    }\n    setShowinfo({\n      showinfo: true,\n      caption: caption,\n      data: transactionByExpenses,\n    });\n  }\n\n  return (\n    <Box>\n      {!summary ? (\n        <Loader />\n      ) : (\n        <>\n          <IsDesktopOrTablet>\n            <Title>Statistic</Title>\n          </IsDesktopOrTablet>\n          <Statistic>\n            <Diagram>\n              <Mobile>\n                <Title>Statistic</Title>\n              </Mobile>\n              <Balance>₴ {summary.periodTotal}</Balance>\n              <Doughnut\n                options={{ cutout: '70%', animation: { animateScale: true } }}\n                data={data}\n              />\n            </Diagram>\n            <Table>\n              <StyledForm onSubmit={handler}>\n                <WrapperYear>\n                  <StyledSelect name=\"year\" ref={yearNode} onChange={handler}>\n                    <option value=\"\">Year</option>\n                    {Array.from(years).map(el => (\n                      <option key={el} value={el}>\n                        {el}\n                      </option>\n                    ))}\n                  </StyledSelect>\n                  <StyledVscChevronDown />\n                </WrapperYear>\n\n                <WrapperMmonth>\n                  <StyledSelect name=\"month\" ref={monthNode} onChange={handler}>\n                    <option value=\"\">Month</option>\n                    {Array.from(monthes).map(el => (\n                      <option key={el} value={el}>\n                        {el}\n                      </option>\n                    ))}\n                  </StyledSelect>\n                  <StyledVscChevronDown />\n                </WrapperMmonth>\n              </StyledForm>\n\n              <TableHeader>\n                <HeaderText\n                  data-sort=\"=\"\n                  onClick={categorySort}\n                  title=\"click to sort\"\n                >\n                  Category\n                </HeaderText>\n                <HeaderText\n                  data-sort=\"=\"\n                  onClick={sumSort}\n                  title=\"click to sort\"\n                >\n                  Sum\n                </HeaderText>\n              </TableHeader>\n\n              <Data>\n                {summary.categoriesSummary\n                  .filter(el => el.total < 0)\n                  .map(({ name, total }, i) => (\n                    <Category\n                      key={name}\n                      col={colors[i]}\n                      onClick={getMoreInfo}\n                      data-name={name}\n                      title=\"click for detailed information\"\n                    >\n                      <div>{name}</div> <div>{-total}</div>\n                    </Category>\n                  ))}\n              </Data>\n              <Total>\n                <div style={{ fontWeight: 700 }}>Expenses:</div>\n                <div style={{ fontWeight: 700, color: '#FF6596' }}>\n                  {-summary.expenseSummary}\n                </div>\n              </Total>\n              <Total>\n                <div style={{ fontWeight: 700 }}>Income:</div>\n                <div style={{ fontWeight: 700, color: '#24CCA7' }}>\n                  {summary.incomeSummary}\n                </div>\n              </Total>\n            </Table>\n            <ToastContainer />\n            {showinfo.showinfo && (\n              <DiagramTabMoreInfor\n                showinfo={showinfo}\n                setShowinfo={setShowinfo}\n              />\n            )}\n          </Statistic>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default DiagramTab;\n"],"names":["Box","styled","Statistic","Diagram","Title","Balance","Table","StyledForm","WrapperYear","WrapperMmonth","StyledSelect","StyledVscChevronDown","VscChevronDown","TableHeader","HeaderText","Data","Category","props","col","Total","Report","Caption","Header","StyledTh","position","StyledTr","SpanCell","SpanCaption","SpanValue","SpanSum","Btn","DiagramTabMoreInfor","showinfo","setShowinfo","createPortal","caption","style","maxHeight","overflow","data","map","item","moment","transactionDate","format","comment","amount","id","onClick","type","document","querySelector","ChartJS","ArcElement","Tooltip","colors","useState","summary","setSummary","categories","setCategories","yearNode","useRef","monthNode","transactions","useSelector","state","finance","years","Set","el","slice","monthes","length","categoriesSummary","filter","total","labels","name","datasets","label","backgroundColor","borderColor","borderWidth","handler","e","preventDefault","current","value","axios","res","console","log","getMoreInfo","categoryName","currentTarget","dataset","categoryId","find","transactionByExpenses","useEffect","getDataForState","then","Mobile","periodTotal","options","cutout","animation","animateScale","onSubmit","ref","onChange","Array","from","node","sort","a","b","title","i","fontWeight","color","expenseSummary","incomeSummary","Loader"],"sourceRoot":""}